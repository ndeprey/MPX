con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$SKIP + pivot_agg$START)
assign("skips",df, envir = .GlobalEnv)
}
pivot_agg <- dcast(skips,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$SKIP + pivot_agg$START)
pivt_agg
pivot_agg
pivot_agg <- dcast(skips,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
pivot_agg
library(ggplot2)
ggplot(data=pivot$agg) + aes(x=ratings_origin, y=skip_rate)
ggplot(data=pivotagg) + aes(x=ratings_origin, y=skip_rate)
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate)
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
assign("skips",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate, stat="identity") + geom_bar()
?geom_bar
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar(stat="identity")
pivot_agg
ggplot(data=skips_by_origin) + aes(x=ratings_origin, y=skip_rate) + geom_bar(stat="identity")
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
ggplot(data=skips_by_origin) + aes(x=ratings_origin, y=skip_rate) + geom_bar(stat="identity")
str(skips)
str(pivot_agg)
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
## pivot_agg$instant_skip_rate <-
## ggplot(data=pivot_agg) + aes(x=ratings_origin, y=skip_rate) + geom_bar()
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
length(all_ratings$ratings_rating[all_ratigns$ratings_elapsed<=1])
length(all_ratings$ratings_rating[all_ratings$ratings_elapsed<=1])
length(all_ratings$ratings_rating[all_ratings$ratings_elapsed<=1 & ratings_rating=="SKIP"])
length(all_ratings$ratings_rating[all_ratings$ratings_elapsed<=1 & all_ratings$ratings_rating=="SKIP"])
skips_by_origin
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
for(i in pivot_agg){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings-rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
}
pivot_agg$instant_skip_rate <- pivot_agg$instant_skips / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
for(i in pivot_agg){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
}
pivot_agg$instant_skip_rate <- pivot_agg$instant_skips / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$skip_rate <- pivot_agg$SKIP / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
pivot_agg$completion_rate <- pivot_agg$COMPLETED / (pivot_agg$COMPLETED + pivot_agg$SKIP + pivot_agg$START)
for(i in 1:nrow(pivot_agg)){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
}
pivot_agg$instant_skip_rate <- pivot_agg$instant_skips / (pivot_agg$SKIP+ pivot_agg$COMPLETED + pivot_agg$START)
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
skips_by_origin
sum(4,6,7,10)
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START','THUMBUP','SHARE')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$TOTAL <- sum(pivot_agg$SKIP, pivot_agg$COMPLETED, pivot_agg$START, pivot_agg$THUMBUP, pivot_agg$SHARE)
pivot_agg$skip_rate <- pivot_agg$SKIP / pivot_agg$TOTAL
pivot_agg$completion_rate <- pivot_agg$COMPLETED / pivot_agg$TOTAL
pivot_agg$share_rate <- pivot_agg$SHARE / pivot_agg$TOTAL
pivot_agg$thumbup_rate <- pivot_agg$THUMBUP / pivot_agg$TOTAL
for(i in 1:nrow(pivot_agg)){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
}
pivot_agg$instant_skip_rate <- pivot_agg$instant_skips / pivot_agg$TOTAL
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
dbDisconnecg(*)
dbDisconnect(*)
dbDisconnect()
library(RMySQL)
dbDisconnect()
cons <- dbListConnections(MySQL())
for (con in cons){
dbDisconnect(con)
}
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
## IF YOU GET AN ERROR for too many connections open, use the following code
## cons <- dbListConnections(MySQL())
## for (con in cons){
## dbDisconnect(con) }
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START','THUMBUP','SHARE')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
pivot_agg$TOTAL <- sum(pivot_agg$SKIP, pivot_agg$COMPLETED, pivot_agg$START, pivot_agg$THUMBUP, pivot_agg$SHARE)
pivot_agg$skip_rate <- pivot_agg$SKIP / pivot_agg$TOTAL
pivot_agg$completion_rate <- pivot_agg$COMPLETED / pivot_agg$TOTAL
pivot_agg$share_rate <- pivot_agg$SHARE / pivot_agg$TOTAL
pivot_agg$thumbup_rate <- pivot_agg$THUMBUP / pivot_agg$TOTAL
for(i in 1:nrow(pivot_agg)){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
}
pivot_agg$instant_skip_rate <- pivot_agg$instant_skips / pivot_agg$TOTAL
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
skips_by_origin
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
## IF YOU GET AN ERROR for too many connections open, use the following code
## cons <- dbListConnections(MySQL())
## for (con in cons){
## dbDisconnect(con) }
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START','THUMBUP','SHARE')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
for( i in 1:nrow(pivot_agg)){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
pivot_agg$TOTAL[i] <- sum(pivot_agg$SKIP[i], pivot_agg$COMPLETED[i], pivot_agg$START[i], pivot_agg$THUMBUP[i], pivot_agg$SHARE[i])
pivot_agg$skip_rate[i] <- pivot_agg$SKIP[i] / pivot_agg$TOTAL[i]
pivot_agg$instant_skip_rate[i] <- pivot_agg$instant_skips[i] / pivot_agg$TOTAL[i]
pivot_agg$completion_rate[i] <- pivot_agg$COMPLETED[i] / pivot_agg$TOTAL[i]
pivot_agg$share_rate[i] <- pivot_agg$SHARE[i] / pivot_agg$TOTAL[i]
pivot_agg$thumbup_rate[i] <- pivot_agg$THUMBUP[i] / pivot_agg$TOTAL[i]
}
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
skips_by_origin
## Time of first sponsorship
m <- dbDriver("MySQL")
# default.platforms <- c('IPHONE')
default.platforms <- c('IPHONE', 'ANDROID')
library(lubridate)
library(RMySQL)
library(plyr)
library(reshape2)
library(ggplot2)
## IF YOU GET AN ERROR for too many connections open, use the following code
## cons <- dbListConnections(MySQL())
## for (con in cons){
## dbDisconnect(con) }
SkipRates_by_origin <- function(start.date, end.date, platforms=default.platforms, driver=m, group="stage4") {
# start.date <- '2014-07-12'
# end.date <- '2014-07-14'
#Fetch the ratings data from input parameters and sort by user id and timestamp
con <- dbConnect(m, group = group)
SQLstatement <- paste("SELECT ratings_user_id, ratings_media_id, ratings_rating, ratings_timestamp, ratings_origin, ratings_elapsed FROM infinite.user_ratings ",
"WHERE ratings_platform IN ('", paste(default.platforms, collapse="', '"), "') ",
"AND ratings_rating IN ('SKIP', 'COMPLETED', 'START','THUMBUP','SHARE')",
"AND ratings_origin NOT IN ('INTRO','STID','SEARCH','XAPPAD','XAPPPROMO','SPONS','DONATE','EDTR','SHARED') ",
"AND DATE(ratings_timestamp) >= '", start.date, "' ",
"AND DATE(ratings_timestamp) <= '", end.date, "' ",
"ORDER BY ratings_user_id ASC, TIMESTAMP(ratings_timestamp) ASC", sep='')
rs <- dbSendQuery(con, SQLstatement)
df <- fetch(rs, n=-1)
print(paste("the query has", nrow(df), "ratings"))
pivot_agg <- dcast(df,ratings_origin ~ ratings_rating, fun.aggregate = length)
for( i in 1:nrow(pivot_agg)){
pivot_agg$instant_skips[i] <- length(df$ratings_rating[
df$ratings_rating == "SKIP" &
df$ratings_elapsed <= 1 &
df$ratings_origin == pivot_agg$ratings_origin[i]])
pivot_agg$TOTAL[i] <- sum(pivot_agg$SKIP[i], pivot_agg$COMPLETED[i], pivot_agg$START[i], pivot_agg$THUMBUP[i], pivot_agg$SHARE[i])
pivot_agg$skip_rate[i] <- pivot_agg$SKIP[i] / pivot_agg$TOTAL[i]
pivot_agg$instant_skip_rate[i] <- pivot_agg$instant_skips[i] / pivot_agg$TOTAL[i]
pivot_agg$completion_rate[i] <- pivot_agg$COMPLETED[i] / pivot_agg$TOTAL[i]
pivot_agg$share_rate[i] <- pivot_agg$SHARE[i] / pivot_agg$TOTAL[i]
pivot_agg$thumbup_rate[i] <- pivot_agg$THUMBUP[i] / pivot_agg$TOTAL[i]
}
assign("skips_by_origin",pivot_agg, envir = .GlobalEnv)
assign("all_ratings",df, envir = .GlobalEnv)
}
SkipRates_by_origin("2014-08-05","2014-08-06")
skips_by_origin
2860/17310
841/17310
ggplot(data=skips_by_origin, x=ratings_origin, y=c(skip_rate, instant_skip_rate, thumup_rate)) + geom_bar(stat="identity")
ggplot(data=skips_by_origin +  aes(x=ratings_origin, y=c(skip_rate,instant_skip_rate, thumup_rate)) + geom_bar(stat="identity")
ggplot(data=skips_by_origin0 +  aes(x=ratings_origin, y=c(skip_rate,instant_skip_rate, thumup_rate)) + geom_bar(stat="identity")
ggplot(data=skips_by_origin) +  aes(x=ratings_origin, y=c(skip_rate,instant_skip_rate, thumup_rate)) + geom_bar(stat="identity")
ggplot(data=skips_by_origin) +  aes(x=ratings_origin, y=c(skip_rate,instant_skip_rate, thumbup_rate)) + geom_bar(stat="identity")
ggplot(data=skips_by_origin) +  aes(x=ratings_origin, y=skip_rate) + geom_bar(stat="identity")
ggplot(data=skips_by_origin) +  aes(x=ratings_origin, y=skip_rate) + geom_hex(stat="identity")
ggplot(data=skips_by_origin) +  aes(x=ratings_origin, y=skip_rate) + geom_bar(stat="identity")
?write.csv
write.csv(skips_by_origin, file="ratings_by_origin_0805_0806")
getwd()
write.csv(skips_by_origin, file="ratings_by_origin_0805_0806.csv")
pivot_agg
skips-by_origin
skips_by_origin
37874+256+12323+7253+2822
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_origin=="SKIP"),]) + aes(x=ratings_elapsed)
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_origin=="SKIP"),]) + aes(x=ratings_elapsed) + geom_density()
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP"),]) + aes(x=ratings_elapsed) + geom_density()
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP"),]) + aes(x=ratings_elapsed) + geom_density() + xlim(0,2500)
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP") & (all_ratings$ratings_elapsed > 2 ),]) + aes(x=ratings_elapsed) + geom_density() + xlim(0,2500)
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP") & (all_ratings$ratings_elapsed > 2 ),]) + aes(x=ratings_elapsed) + geom_density() + xlim(0,500)
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP") & (all_ratings$ratings_elapsed > 2 ),]) + aes(x=ratings_elapsed) + geom_density() + xlim(0,100)
ggplot(data=all_ratings[(all_ratings$ratings_origin=="FEATURED") & (all_ratings$ratings_rating=="SKIP") & (all_ratings$ratings_elapsed > 2 ),]) + aes(x=ratings_elapsed) + geom_boxplot() + xlim(0,500)
2*7*24
skips_by_origin
sum(skips_by_origin$instant_skips)
sum(skips_by_origin$skip_rate)
sum(skips_by_origin$TOTAL)
20635/328354
2572/8628
348/1504
ggplot(data=skips_by_origin) aes(x=ratings_origin, y=instant_skip_rate) + geom_bar(stat="identity")
ggplot(data=skips_by_origin) + aes(x=ratings_origin, y=instant_skip_rate) + geom_bar(stat="identity")
